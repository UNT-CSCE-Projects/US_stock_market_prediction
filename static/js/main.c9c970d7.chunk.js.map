{"version":3,"sources":["components/plot/PlotGraph.js","components/header/HeaderSect.js","App.js","reportWebVitals.js","index.js","assets/images/download.jpeg"],"names":["PlotGraph","_ref","train","test","chartData","setChartData","useState","useEffect","trainDates","Array","from","length","_","index","testDates","type","mode","name","x","y","line","color","React","createElement","Plot","data","HeaderSect","stockId","setStockId","day","setDay","algorithm","setAlgorithm","setTrain","setTest","mae","setMAE","error","setError","fetchDataFromAl1","e","fetchData","async","response","fetch","concat","status","result","json","className","src","logoImage","alt","href","rel","target","style","width","marginLeft","marginTop","placeholder","value","onChange","max","min","required","onClick","padding","border","borderRadius","marginBottom","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.c9c970d7.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Plot from 'react-plotly.js';\n\nconst PlotGraph = ({train, test}) => {\n  const [chartData, setChartData] = useState([]);\n\n  useEffect(() => {\n    // Assuming you need some processing for chartData based on train and test\n    // You may need to adjust this part based on your data structure\n    const trainDates = Array.from({ length: train.length }, (_, index) => index + 1);\n    const testDates = Array.from({ length: test.length }, (_, index) => index  + train.length);\n\n    const trace1 = {\n      type: 'scatter',\n      mode: 'lines',\n      name: 'Training Data',\n      x: trainDates,\n      y: train,\n      line: { color: '#17BECF' },\n    };\n\n    const trace2 = {\n      type: 'scatter',\n      mode: 'lines',\n      name: 'Testing Data',\n      x: testDates,\n      y: test,\n      line: { color: '#FF5733' }, // You can change this color as needed\n    };\n\n    setChartData([trace1, trace2]);\n  }, [train, test]);\n\n  if (chartData.length === 0) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <Plot data={chartData} />\n    </div>\n  );\n};\n\nexport default PlotGraph;\n","\nimport logoImage from \"../../assets/images/download.jpeg\";\nimport PlotGraph from '../plot/PlotGraph';\nimport React, { useState,useEffect } from 'react';\n\n\n\n  \n\nexport default function HeaderSect() {\n  const [stockId, setStockId] = useState('');\n  const [day, setDay] = useState('');\n  const [algorithm, setAlgorithm] = useState(0); // Replace with your actual algorithm\n  const [train, setTrain] = useState([])\n  const [test, setTest] = useState([])\n  const [mae, setMAE] = useState('')\n  const [error, setError] = useState(false)\n  const handleStockIdChange = (e) => {\n    setStockId(e.target.value);\n    setAlgorithm(0)\n    setDay('')\n    setMAE('')\n  };\n\n  const handleDayChange = (e) => {\n    setDay(e.target.value);\n    setAlgorithm(0)\n    setMAE('')\n  };\n\n  const fetchDataFromAl1 = (e)=>{\n    setAlgorithm(e);\n    \n  }\n  useEffect(() => {\n    if (algorithm !== 0) {\n      fetchData();\n    }\n  }, [ algorithm]);\n  const fetchData = async () => {\n    try {\n        const response = await fetch(`http://127.0.0.1:5000/data?stock_id=${stockId}&day=${day}&algorithm=${algorithm}`);\n        if (response.status===200) {\n          const result = await response.json();\n          \n          setTrain(result['training']);\n          setTest(result['testing'])\n          //console.log('train ', train)\n          //console.log('test ', test)\n          setMAE(result['mae'])\n          setError('')\n        } else{\n          const result = await response.json();\n          setError(result['error'])\n          setTrain([])\n          setMAE('')\n          setTest([])\n        }\n        \n      \n    } catch (error) {\n      setError('Unexpected error occurred')\n      setTrain([])\n      setMAE('')\n      setTest([])\n    }\n  };\n  \n  \n  return (\n    <div>\n      <nav className=\"relative py-3 custom-nav text-white\">\n        <div className=\"container mx-auto\">\n          <div className=\"flex items-center justify-between\">\n            <img\n              src={logoImage}\n              alt=\"logo\"\n              className=\"w-20\"\n            />\n            <div className=\"flex-1 max-w-xs custom-title\">\n              Optiver Stock Price Prediction\n            </div>\n            <div className=\"flex space-x-4\">\n              <a href=\"https://www.kaggle.com/competitions/optiver-trading-at-the-close\"  rel=\"noopener noreferrer\" target=\"_blank\" className=\"text-blue-300\">Dataset</a>\n              <a href=\"https://github.com/UNT-CSCE-Projects/US_stock_market_prediction\"  rel=\"noopener noreferrer\" target=\"_blank\" className=\"text-blue-300\">Github</a>\n            </div>\n          </div>\n        </div>\n      </nav>\n      <div\n      className=\"relative items-center justify-center\"\n      style={{\n        width: '30%',\n        marginLeft: '33rem',\n        marginTop: '10px'\n      }}\n    >\n        <form  className=\"flex items-center space-x-2\" >\n        \n          <div className=\"w-40\">Stock Number </div>\n                <input\n                  type=\"number\"\n                  placeholder=\"Enter Stock ID\"\n                  value={stockId}\n                  onChange={handleStockIdChange}\n                  max={29}\n                  min={0}\n                  required\n                  className=\"px-2 py-1 border border-gray-300 rounded\"\n                />\n              <div className=\"w-40\">Day </div>\n              <input\n                type=\"number\"\n                placeholder=\"Enter Day\"\n                value={day}\n                onChange={handleDayChange}\n                max={480}\n                min={1}\n                required\n                className=\"px-2 py-1 border border-gray-300 rounded\"\n              />\n            </form>\n\n\n      \n      </div>\n     \n      <div className=\"algobar \">\n        <button className=\"section bg-blue-500 text-white \" onClick={()=>fetchDataFromAl1(1)}>LSTM</button>\n        <button className=\"section bg-blue-500 text-white\" onClick={()=>fetchDataFromAl1(2)}>Algorithm 2</button>\n        <button className=\"section bg-blue-500 text-white\" onClick={()=>fetchDataFromAl1(3)}>Algorithm 3</button>\n      </div>\n\n      \n      <div className='algobar' style={{ marginTop: '20px', padding: '10px', border: '1px solid #ccc', borderRadius: '5px' }}>\n  {mae !== '' && <div style={{ marginBottom: '10px' }}>Mean Absolute Error: <b>{mae}</b></div>}\n  \n  {algorithm > 0 && train.length > 0 && test.length > 0 && <PlotGraph train={train} test={test} />}\n\n  {error !== '' && <span style={{ color: 'red' }}>{error}</span>}\n</div>\n\n\n      \n    </div>\n  );\n}\n","\nimport './assets/styles/main.css'\nimport HeaderSect from './components/header/HeaderSect';\n\nimport React from 'react';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HeaderSect/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/download.f53c0980.jpeg\";"],"sourceRoot":""}